[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alexe\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alexe\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 1.8.0_201)
[debug]       Load.loadUnit: plugins took 227.5531ms
[debug]       Load.loadUnit: defsScala took 0.655ms
[debug] [Loading] Scanning directory C:\Users\alexe\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexe\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 55.459 ms
[debug]           Load.resolveProject(global-plugins) took 158.8509ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alexe\.sbt\1.0\plugins, plugins: List(<none>))) took 269.4805ms
[debug] [Loading] Done in C:\Users\alexe\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 321.3413ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.7766ms
[debug]     Load.loadUnit(file:/C:/Users/alexe/.sbt/1.0/plugins/, ...) took 570.6795ms
[debug]   Load.apply: load took 1026.3195ms
[debug]   Load.apply: resolveProjects took 16.7702ms
[debug]   Load.apply: finalTransforms took 180.577ms
[debug]   Load.apply: config.delegates took 34.6252ms
[debug]   Load.apply: Def.make(settings)... took 1495.0878ms
[debug]   Load.apply: structureIndex took 273.9415ms
[debug]   Load.apply: mkStreams took 3.9315ms
[info] loading global plugins from C:\Users\alexe\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8149.9955ms
[debug]           Load.loadUnit: plugins took 54.9748ms
[debug]           Load.loadUnit: defsScala took 0.0179ms
[debug] [Loading] Scanning directory C:\Users\alexe\IdeaProjects\dotty-simple\project
[debug]             Load.loadUnit: mkEval took 16.2621ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alexe\IdeaProjects\dotty-simple\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.3398 ms
[info] loading settings for project dotty-simple-build from idea.sbt ...
[debug]               Load.resolveProject(dotty-simple-build) took 12.3441ms
[debug]             Load.loadTransitive: finalizeProject(Project(id dotty-simple-build, base: C:\Users\alexe\IdeaProjects\dotty-simple\project, plugins: List(<none>))) took 19.0034ms
[debug] [Loading] Done in C:\Users\alexe\IdeaProjects\dotty-simple\project, returning: (dotty-simple-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 362.9141ms
[debug]           Load.loadUnit: cleanEvalClasses took 11.4021ms
[debug]         Load.loadUnit(file:/C:/Users/alexe/IdeaProjects/dotty-simple/project/, ...) took 432.1187ms
[debug]       Load.apply: load took 437.1629ms
[debug]       Load.apply: resolveProjects took 0.3355ms
[debug]       Load.apply: finalTransforms took 42.8847ms
[debug]       Load.apply: config.delegates took 1.023ms
[debug]       Load.apply: Def.make(settings)... took 192.1188ms
[debug]       Load.apply: structureIndex took 57.3003ms
[debug]       Load.apply: mkStreams took 0.0072ms
[info] loading project definition from C:\Users\alexe\IdeaProjects\dotty-simple\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1383.7442ms
[debug]     Load.loadUnit: defsScala took 0.0093ms
[debug] [Loading] Scanning directory C:\Users\alexe\IdeaProjects\dotty-simple
[debug]       Load.loadUnit: mkEval took 3.111ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 6.6858 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 72.5966ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\alexe\IdeaProjects\dotty-simple, plugins: List(<none>))) took 84.3622ms
[debug] [Loading] Done in C:\Users\alexe\IdeaProjects\dotty-simple, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 6099.1812ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.9811ms
[debug]   Load.loadUnit(file:/C:/Users/alexe/IdeaProjects/dotty-simple/, ...) took 7499.6446ms
[debug] Load.apply: load took 7505.0063ms
[debug] Load.apply: resolveProjects took 0.4846ms
[debug] Load.apply: finalTransforms took 72.0228ms
[debug] Load.apply: config.delegates took 0.6887ms
[debug] Load.apply: Def.make(settings)... took 165.6264ms
[debug] Load.apply: structureIndex took 64.8573ms
[debug] Load.apply: mkStreams took 0.0072ms
[info] set current project to dotty-simple (in build file:/C:/Users/alexe/IdeaProjects/dotty-simple/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57734 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57734, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to dotty-simple (in build file:/C:/Users/alexe/IdeaProjects/dotty-simple/)
[debug] > Exec(idea-shell, None, None)
